<?xml version="1.0" encoding="UTF-8"?>

<!-- ======================================================================================================================== 
	beans-service.xml Copyright (c) 2013 Manning Publications Co. Willie Wheeler 
	(willie.wheeler@gmail.com) Book: http://manning.com/wheeler/ Blog: http://springinpractice.com/ 
	Code: https://github.com/springinpractice ======================================================================================================================== -->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:c="http://www.springframework.org/schema/c" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/jee
		http://www.springframework.org/schema/jee/spring-jee-3.1.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
		http://www.springframework.org/schema/util
		http://www.springframework.org/schema/util/spring-util-3.1.xsd">


	<context:property-placeholder
		location="classpath:/spring/environment.properties" />

	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close" p:driverClassName="${dataSource.driverClassName}"
		p:url="${dataSource.url}" p:username="${dataSource.username}"
		p:password="${dataSource.password}" />

	<util:properties id="hibernateProperties">
		<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5InnoDBDialect</prop>
		<prop key="hibernate.show_sql">true</prop>
	</util:properties>

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean"
		p:dataSource-ref="dataSource" p:packagesToScan="com.updatingtech.videsaas.model"
		p:hibernateProperties-ref="hibernateProperties">
		<property name="annotatedClasses">
			<list>
				<value>com.updatingtech.videsaas.model.User</value>
				<value>com.updatingtech.videsaas.model.Videor</value>
			</list>
		</property>
	</bean>
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager"
		p:sessionFactory-ref="sessionFactory" />

	<bean id="videoDao" class="com.updatingtech.videosaas.daoImpl.VideoDaoImpl"></bean>
	<bean id="videoService" class="com.updatingtech.videosaas.serviceImpl.VideoServiceImpl">
	    <property name="videoDao" ref="videoDao"></property>
	</bean>
	<bean id="videoController" class="com.updatingtech.videosaas.controller.VideoController">
	    <property name="videoService" ref="videoService"></property>
	</bean>
	<bean id="userDao" class="com.updatingtech.videosaas.daoImpl.UserDaoImpl"></bean>
	<bean id="userService" class="com.updatingtech.videosaas.serviceImpl.UserServiceImpl">
	    <property name="userDao" ref="userDao"></property>
	</bean>
	<bean id="userController" class="com.updatingtech.videosaas.controller.UserController">
	    <property name="userService" ref="userService"></property>
	</bean>	
	<context:component-scan base-package="com.updatingtech.videsaas.controller"></context:component-scan>
	<tx:annotation-driven />
</beans>
